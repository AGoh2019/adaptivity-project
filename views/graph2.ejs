<head>
    <style>
        body {
            margin: 0;
        }

        .links line{
            color: white;
        }
    </style>

    <script src="//unpkg.com/3d-force-graph"></script>
    <script src="//unpkg.com/three"></script>
    <script src="//unpkg.com/three-spritetext"></script>

    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
    <!--<script src="../../dist/3d-force-graph.js"></script>-->
</head>

<body>
    <div id="3d-graph"></div>
                <div class="">
                    <p id="modal-body"></p>
                </div>


    <script>
        const elem = document.getElementById('3d-graph');
        const Graph = ForceGraph3D()
            (elem)
            .jsonUrl('data')
            .nodeThreeObject(node => {
                const sprite = new SpriteText(node.id);
                sprite.material.depthWrite = false; // make sprite background transparent
                sprite.color = node.color;
                sprite.textHeight = node.value;
                return sprite;
            })
            .nodeAutoColorBy('group')
            .linkOpacity(0.5)
            .onNodeClick(node => {
                // Aim at node from outside it
                const modal = document.getElementById("modal-body");
                modal.innerHTML = `string text ${node.id} string text`
                const distance = 40;
                const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);

                Graph.cameraPosition({
                        x: node.x * distRatio,
                        y: node.y * distRatio,
                        z: node.z * distRatio
                    }, // new position
                    node, // lookAt ({ x, y, z })
                    3000 // ms transition duration
                );

                Graph.cameraPosition(
                    { x: node.x /10000000 , y: node.y /10000000, z: node.z /10000000 }, // new position
                    node, // lookAt ({ x, y, z })
                    3000  // ms transition duration
                );

            });
    </script>
</body>