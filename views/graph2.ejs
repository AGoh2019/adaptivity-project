<head>
    <style>
        body {
            margin: 0;
        }

        .links line{
            color: white;
        }

        .my-modal {
            display: none;
            position: fixed;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
            overflow: auto;
            z-index: 1;
            background-color: rgb(0, 0, 0, 0.4);
        }

        .my-modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 32px 20px 20px 20px;
            border: 1px solid black;
            width: 40%;
            max-width: 350px;
            min-width: 350px;
            align-items: center;
            position: relative;
        }
    </style>

    <script src="//unpkg.com/3d-force-graph"></script>
    <script src="//unpkg.com/three"></script>
    <script src="//unpkg.com/three-spritetext"></script>

    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>
    <!--<script src="../../dist/3d-force-graph.js"></script>-->
</head>

<body>
    <div id="3d-graph"></div>

    <div id="myModal" class="my-modal">
        <div class="my-modal-content">
            <p id="modalContent"></p>
            </div>
        </div>


    <script>
        const elem = document.getElementById('3d-graph');
        const Graph = ForceGraph3D()
            (elem)
            .jsonUrl('data')
            .nodeThreeObject(node => {
                const sprite = new SpriteText(node.id);
                sprite.material.depthWrite = false; // make sprite background transparent
                sprite.color = node.color;
                sprite.textHeight = node.value;
                return sprite;
            })
            .nodeAutoColorBy('group')
            .linkOpacity(0.5)
            .onNodeClick(node => {
                // Aim at node from outside it
                const myModal = document.getElementById("myModal");
                const modalContent = document.getElementById("modalContent");
                if (myModal.style.display == "none" || myModal.style.display == '') {
                    myModal.style.display = "block";
                    modalContent.innerHTML = `string text ${node.id} string text`;
                } else{
                    myModal.style.display = "none";
                }

                const distance = 40;
                const distRatio = 10000000000000 + distance / Math.hypot(node.x, node.y, node.z);

                Graph.cameraPosition({
                        x: node.x / distRatio,
                        y: node.y / distRatio,
                        z: node.z / distRatio
                    }, // new position
                    node, // lookAt ({ x, y, z })
                    3000, // ms transition duration
                );
            });

        window.addEventListener('click', function (event) {
            if (event.target == myModal) {
                myModal.style.display = "none";
            }
        })
    </script>
</body>